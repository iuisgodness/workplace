모듈
모듈이란? 함수나 변수 또는 클래스를 모아 놓은 파일

모듈 만들기
ex)
# mod1.py # mod1.py가 모듈임
def add(a, b):
    return a + b

def sub(a , b):
    return a - b
    
모듈 불러오기
C:\Users\army>cd C:\doit # mod1.py 저장한 디렉터리로 이동

C:\doit>dir # C:\doit 디렉터리에 파일이 있는지 확인

C:\doit>python # 대화형 인터프리터 실행

>>> import mod1 # import는 현재 디렉터리에 있는 파일이나 파이썬 라이브러리가 저장된 디렉터리에 있는 모듈만 불러올 수 있다.
>>> print(mod1.add(3, 4)) # mod1.add(도트연산자)
7
import의 사용법
import 모듈이름

mod1.add이런식으로 쓰고 싶지 않다면?
from 모듈 이름 import 모듈 함수
>>> from mod1 import add
>>> add(3, 4)
7
add함수뿐만아니라 sub함수도 같이 사용하려면?
1.
from mod1 import add, sub
2.
from mod1 import *

if __name__ == "__main__" - C:\doit>python mod1.py처럼 직접 이 파일을 실행했을 때는 저문장이 참이 되어 if문이 다음 문장이 수행됨,
반대로 대화형 인터프리터나 다른 파일에서 이 모듈을 불러서 사용할 때는 저 문이 거짓이 되어 if문 다음 문장이 수행되지 않음
__name__ : 파이썬 내부적으로 사용하는 특별한 변수 이름

클래스나 변수 등을 포함한 모듈
# mod2.py
PI = 3.141592

class Math:
    def solv(self, r):
        return PI * (r**2)

def add(a, b):
    return a + b

>>> import mod2
>>> print(mod2.PI)
3.141592
>>> a = mod2.Math()
>>> print(a.solv(2))
12.566368
>>> print(mod2.add(mod2.PI, 4.4))
7.5415920000000005

다른 파일에서 모듈 불러오기
# modtest.py
import mod2
result = mod2.add(3, 4)
print(result)
둘다 같은 디렉터리에 있으면 가능함

모듈을 불러오는 또 다른 방법(ㅈㄴ 어려움)
1. sys.path.append(모듈을 저장한 디렉터리)사용하기
2. PYTHONPATH환경 변수 사용하기






이 장 너무어려워 천천히 해야겠음;;
