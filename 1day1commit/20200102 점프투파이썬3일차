자료형 - 딕셔너리
딕셔너리의 형태
a = {key: value}
다음과 같은 dic 딕셔너리를 보자
dic = {1: 'a', 2: 'b', 3: 'c'}
key = [1, 2, 3]     value = ['a', 'b', 'c']
딕셔너리 쌍을 추가하려면
dic[5] = 'h'    ->   []안의 것은 key값이고 ' '안의 값은 value로 들어간다.
딕셔너리 요소를 삭제하려면 -> del함수 사용
del a[1]
a
{2: 'b', 3: 'c', 5: 'h'}만 남게됨
딕셔너리에서 key를사용해 value를 얻으려면
a[key]   ->    value
a[2]     ->    'b'
딕셔너리에서 key는 고유하여야 한다. 중복되면 안된다. 중복되면 맨뒤의 중복의 key만 value값을 갖게 된다.
또한 딕셔너리에서 리스트를 key로 사용할수 없다. 왜냐하면 리스트는 값이 변할수 있기 때문이다. 따라서 튜플은 key로 사용 가능하다.
key리스트를 만들고 싶으면 -> a.keys()
= dict_keys([2, 3, 5])

for k in a.keys()
  print(k)            print는 들여쓰기 꼭 해야한다.
 
2
3
5
여기서 리스트로 나타내기 위해서는 
list(a.keys())해주면 된다.
value리스트 만들기
a.values()
= dict_values(['b', 'c', 'h'])
key, value쌍 얻기   -> item
a.item()
= dict_items([(2, 'b'), (3, 'c'), (5, 'h')])
key: values쌍 모두 지우기   -> clear
a.clear()
a   ->   {}
key로 value 얻기   -> get
a.get(2)
= 'b'
사실 a[2]와 같다. 하지만 존재하지 않는 key를 불러낼때는 a[2]는 오류를 발생하고 a.get(2)는 None을 보낸다.
딕셔너리 안에서 찾으려는 key값이 없을 경우 미리 정해 둔 디폴트 값을 대신 가져오게 하려면 ->   a.get(x, ' ')
해당 key가 딕셔너리 안에 있는지 조사하려면 -> '2' in a
= True
만약 없다면  ->   False로 나옴


오늘 전부 나온 성적을 보고 멘탈에 충격을 받아 공부를 별로 못했다. 주말쉬고 열심히 해야겠다.



